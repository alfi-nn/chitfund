{"ast":null,"code":"import { NETWORK } from './config.js';\nimport { ethers } from 'ethers';\nexport function getProvider() {\n  if (typeof window !== 'undefined' && window.ethereum) {\n    return new ethers.BrowserProvider(window.ethereum);\n  }\n  if (!NETWORK.rpcUrl) throw new Error('Missing NETWORK.rpcUrl in src/web3/config.js');\n  return new ethers.JsonRpcProvider(NETWORK.rpcUrl, NETWORK.chainId);\n}\nexport async function getSigner() {\n  const provider = getProvider();\n  if (provider.send) {\n    await provider.send('eth_requestAccounts', []);\n  }\n  return await provider.getSigner();\n}","map":{"version":3,"names":["NETWORK","ethers","getProvider","window","ethereum","BrowserProvider","rpcUrl","Error","JsonRpcProvider","chainId","getSigner","provider","send"],"sources":["C:/Users/kjalf/Downloads/ChitFund_SHM-main/ChitFund_SHM-main/src/web3/provider.js"],"sourcesContent":["import { NETWORK } from './config.js';\r\nimport { ethers } from 'ethers';\r\n\r\nexport function getProvider() {\r\n  if (typeof window !== 'undefined' && window.ethereum) {\r\n    return new ethers.BrowserProvider(window.ethereum);\r\n  }\r\n  if (!NETWORK.rpcUrl) throw new Error('Missing NETWORK.rpcUrl in src/web3/config.js');\r\n  return new ethers.JsonRpcProvider(NETWORK.rpcUrl, NETWORK.chainId);\r\n}\r\n\r\nexport async function getSigner() {\r\n  const provider = getProvider();\r\n  if (provider.send) {\r\n    await provider.send('eth_requestAccounts', []);\r\n  }\r\n  return await provider.getSigner();\r\n} "],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,MAAM,QAAQ,QAAQ;AAE/B,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,EAAE;IACpD,OAAO,IAAIH,MAAM,CAACI,eAAe,CAACF,MAAM,CAACC,QAAQ,CAAC;EACpD;EACA,IAAI,CAACJ,OAAO,CAACM,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACpF,OAAO,IAAIN,MAAM,CAACO,eAAe,CAACR,OAAO,CAACM,MAAM,EAAEN,OAAO,CAACS,OAAO,CAAC;AACpE;AAEA,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,IAAIS,QAAQ,CAACC,IAAI,EAAE;IACjB,MAAMD,QAAQ,CAACC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;EAChD;EACA,OAAO,MAAMD,QAAQ,CAACD,SAAS,CAAC,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}