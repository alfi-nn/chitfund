{"ast":null,"code":"import{NETWORK}from'./config.js';import{ethers}from'ethers';export function getProvider(){if(typeof window!=='undefined'&&window.ethereum){return new ethers.BrowserProvider(window.ethereum);}if(!NETWORK.rpcUrl)throw new Error('Missing NETWORK.rpcUrl in src/web3/config.js');return new ethers.JsonRpcProvider(NETWORK.rpcUrl,NETWORK.chainId);}export async function getSigner(){const provider=getProvider();if(provider.send){await provider.send('eth_requestAccounts',[]);}return await provider.getSigner();}","map":{"version":3,"names":["NETWORK","ethers","getProvider","window","ethereum","BrowserProvider","rpcUrl","Error","JsonRpcProvider","chainId","getSigner","provider","send"],"sources":["C:/Users/kjalf/Downloads/ChitFund_SHM-main/ChitFund_SHM-main/src/web3/provider.js"],"sourcesContent":["import { NETWORK } from './config.js';\r\nimport { ethers } from 'ethers';\r\n\r\nexport function getProvider() {\r\n  if (typeof window !== 'undefined' && window.ethereum) {\r\n    return new ethers.BrowserProvider(window.ethereum);\r\n  }\r\n  if (!NETWORK.rpcUrl) throw new Error('Missing NETWORK.rpcUrl in src/web3/config.js');\r\n  return new ethers.JsonRpcProvider(NETWORK.rpcUrl, NETWORK.chainId);\r\n}\r\n\r\nexport async function getSigner() {\r\n  const provider = getProvider();\r\n  if (provider.send) {\r\n    await provider.send('eth_requestAccounts', []);\r\n  }\r\n  return await provider.getSigner();\r\n} "],"mappings":"AAAA,OAASA,OAAO,KAAQ,aAAa,CACrC,OAASC,MAAM,KAAQ,QAAQ,CAE/B,MAAO,SAAS,CAAAC,WAAWA,CAAA,CAAG,CAC5B,GAAI,MAAO,CAAAC,MAAM,GAAK,WAAW,EAAIA,MAAM,CAACC,QAAQ,CAAE,CACpD,MAAO,IAAI,CAAAH,MAAM,CAACI,eAAe,CAACF,MAAM,CAACC,QAAQ,CAAC,CACpD,CACA,GAAI,CAACJ,OAAO,CAACM,MAAM,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACpF,MAAO,IAAI,CAAAN,MAAM,CAACO,eAAe,CAACR,OAAO,CAACM,MAAM,CAAEN,OAAO,CAACS,OAAO,CAAC,CACpE,CAEA,MAAO,eAAe,CAAAC,SAASA,CAAA,CAAG,CAChC,KAAM,CAAAC,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,GAAIS,QAAQ,CAACC,IAAI,CAAE,CACjB,KAAM,CAAAD,QAAQ,CAACC,IAAI,CAAC,qBAAqB,CAAE,EAAE,CAAC,CAChD,CACA,MAAO,MAAM,CAAAD,QAAQ,CAACD,SAAS,CAAC,CAAC,CACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}