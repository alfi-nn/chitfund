{"ast":null,"code":"import { NETWORK } from './config.js';\nimport { ethers } from 'ethers';\nexport function getProvider() {\n  if (typeof window !== 'undefined' && window.ethereum) {\n    return new ethers.BrowserProvider(window.ethereum);\n  }\n  if (!NETWORK.rpcUrl) throw new Error('Missing NETWORK.rpcUrl in src/web3/config.js');\n  return new ethers.JsonRpcProvider(NETWORK.rpcUrl, NETWORK.chainId);\n}\nexport async function ensureNetwork() {\n  if (typeof window === 'undefined' || !window.ethereum) return;\n  const targetChainIdHex = '0x' + Number(NETWORK.chainId).toString(16);\n  try {\n    const current = await window.ethereum.request({\n      method: 'eth_chainId'\n    });\n    if ((current === null || current === void 0 ? void 0 : current.toLowerCase()) === targetChainIdHex.toLowerCase()) return;\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: targetChainIdHex\n        }]\n      });\n    } catch (switchErr) {\n      var _switchErr$data$origi;\n      // If the chain is not added, add it\n      if ((switchErr === null || switchErr === void 0 ? void 0 : switchErr.code) === 4902 || switchErr !== null && switchErr !== void 0 && switchErr.data && ((_switchErr$data$origi = switchErr.data.originalError) === null || _switchErr$data$origi === void 0 ? void 0 : _switchErr$data$origi.code) === 4902) {\n        await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: targetChainIdHex,\n            chainName: 'Shardeum',\n            rpcUrls: [NETWORK.rpcUrl]\n          }]\n        });\n      } else {\n        throw switchErr;\n      }\n    }\n  } catch (e) {\n    // ignore, user can switch manually\n  }\n}\nexport async function getSigner() {\n  const provider = getProvider();\n  if (provider.send) {\n    await provider.send('eth_requestAccounts', []);\n  }\n  return await provider.getSigner();\n}","map":{"version":3,"names":["NETWORK","ethers","getProvider","window","ethereum","BrowserProvider","rpcUrl","Error","JsonRpcProvider","chainId","ensureNetwork","targetChainIdHex","Number","toString","current","request","method","toLowerCase","params","switchErr","_switchErr$data$origi","code","data","originalError","chainName","rpcUrls","e","getSigner","provider","send"],"sources":["C:/Users/kjalf/Downloads/ChitFund_SHM-main/ChitFund_SHM-main/src/web3/provider.js"],"sourcesContent":["import { NETWORK } from './config.js';\nimport { ethers } from 'ethers';\n\nexport function getProvider() {\n  if (typeof window !== 'undefined' && window.ethereum) {\n    return new ethers.BrowserProvider(window.ethereum);\n  }\n  if (!NETWORK.rpcUrl) throw new Error('Missing NETWORK.rpcUrl in src/web3/config.js');\n  return new ethers.JsonRpcProvider(NETWORK.rpcUrl, NETWORK.chainId);\n}\n\nexport async function ensureNetwork() {\n  if (typeof window === 'undefined' || !window.ethereum) return;\n  const targetChainIdHex = '0x' + Number(NETWORK.chainId).toString(16);\n  try {\n    const current = await window.ethereum.request({ method: 'eth_chainId' });\n    if (current?.toLowerCase() === targetChainIdHex.toLowerCase()) return;\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: targetChainIdHex }]\n      });\n    } catch (switchErr) {\n      // If the chain is not added, add it\n      if (switchErr?.code === 4902 || (switchErr?.data && switchErr.data.originalError?.code === 4902)) {\n        await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: targetChainIdHex,\n            chainName: 'Shardeum',\n            rpcUrls: [NETWORK.rpcUrl],\n          }]\n        });\n      } else {\n        throw switchErr;\n      }\n    }\n  } catch (e) {\n    // ignore, user can switch manually\n  }\n}\n\nexport async function getSigner() {\n  const provider = getProvider();\n  if (provider.send) {\n    await provider.send('eth_requestAccounts', []);\n  }\n  return await provider.getSigner();\n} "],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,MAAM,QAAQ,QAAQ;AAE/B,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,EAAE;IACpD,OAAO,IAAIH,MAAM,CAACI,eAAe,CAACF,MAAM,CAACC,QAAQ,CAAC;EACpD;EACA,IAAI,CAACJ,OAAO,CAACM,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACpF,OAAO,IAAIN,MAAM,CAACO,eAAe,CAACR,OAAO,CAACM,MAAM,EAAEN,OAAO,CAACS,OAAO,CAAC;AACpE;AAEA,OAAO,eAAeC,aAAaA,CAAA,EAAG;EACpC,IAAI,OAAOP,MAAM,KAAK,WAAW,IAAI,CAACA,MAAM,CAACC,QAAQ,EAAE;EACvD,MAAMO,gBAAgB,GAAG,IAAI,GAAGC,MAAM,CAACZ,OAAO,CAACS,OAAO,CAAC,CAACI,QAAQ,CAAC,EAAE,CAAC;EACpE,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMX,MAAM,CAACC,QAAQ,CAACW,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAc,CAAC,CAAC;IACxE,IAAI,CAAAF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,WAAW,CAAC,CAAC,MAAKN,gBAAgB,CAACM,WAAW,CAAC,CAAC,EAAE;IAC/D,IAAI;MACF,MAAMd,MAAM,CAACC,QAAQ,CAACW,OAAO,CAAC;QAC5BC,MAAM,EAAE,4BAA4B;QACpCE,MAAM,EAAE,CAAC;UAAET,OAAO,EAAEE;QAAiB,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOQ,SAAS,EAAE;MAAA,IAAAC,qBAAA;MAClB;MACA,IAAI,CAAAD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,IAAI,MAAK,IAAI,IAAKF,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEG,IAAI,IAAI,EAAAF,qBAAA,GAAAD,SAAS,CAACG,IAAI,CAACC,aAAa,cAAAH,qBAAA,uBAA5BA,qBAAA,CAA8BC,IAAI,MAAK,IAAK,EAAE;QAChG,MAAMlB,MAAM,CAACC,QAAQ,CAACW,OAAO,CAAC;UAC5BC,MAAM,EAAE,yBAAyB;UACjCE,MAAM,EAAE,CAAC;YACPT,OAAO,EAAEE,gBAAgB;YACzBa,SAAS,EAAE,UAAU;YACrBC,OAAO,EAAE,CAACzB,OAAO,CAACM,MAAM;UAC1B,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAMa,SAAS;MACjB;IACF;EACF,CAAC,CAAC,OAAOO,CAAC,EAAE;IACV;EAAA;AAEJ;AAEA,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAC9B,IAAI0B,QAAQ,CAACC,IAAI,EAAE;IACjB,MAAMD,QAAQ,CAACC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;EAChD;EACA,OAAO,MAAMD,QAAQ,CAACD,SAAS,CAAC,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}