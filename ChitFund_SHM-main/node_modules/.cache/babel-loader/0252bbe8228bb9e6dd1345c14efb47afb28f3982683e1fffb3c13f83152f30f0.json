{"ast":null,"code":"import{ethers}from'ethers';import{getProvider,getSigner}from'./provider.js';import{ADDRESSES}from'./config.js';import ChitFundFactoryAbi from'../abis/ChitFundFactory.json';import ChitGroupAbi from'../abis/ChitGroup.json';function getContract(address,abi,signerOrProvider){return new ethers.Contract(address,abi,signerOrProvider);}export function getFactory(){let readonly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;const p=readonly?getProvider():undefined;const signerOrProvider=readonly?p:undefined;return getContract(ADDRESSES.ChitFundFactory,ChitFundFactoryAbi,signerOrProvider!==null&&signerOrProvider!==void 0?signerOrProvider:p);}export function getGroup(address){let readonly=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;const provider=getProvider();return getContract(address,ChitGroupAbi,provider);}export async function createGroup(cfg){const signer=await getSigner();const factory=new ethers.Contract(ADDRESSES.ChitFundFactory,ChitFundFactoryAbi,signer);const tx=await factory.createChitGroup(cfg);const receipt=await tx.wait();const ev=receipt.logs.map(l=>{try{return factory.interface.parseLog(l);}catch(_unused){return null;}}).find(e=>e&&e.name==='GroupCreated');return ev?ev.args.group:null;}export async function listGroups(){const factory=getFactory(true);return await factory.getActiveGroups();}export async function joinGroup(groupAddress){let valueWei=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'0';const signer=await getSigner();const group=new ethers.Contract(groupAddress,ChitGroupAbi,signer);const tx=await group.joinGroup({value:valueWei});return await tx.wait();}export async function commitBid(groupAddress,amount,saltHex){const signer=await getSigner();const group=new ethers.Contract(groupAddress,ChitGroupAbi,signer);const hash=ethers.keccak256(ethers.AbiCoder.defaultAbiCoder().encode(['uint256','bytes32'],[amount,saltHex]));const tx=await group.commitBid(hash);return await tx.wait();}export async function revealBid(groupAddress,amount,saltHex){const signer=await getSigner();const group=new ethers.Contract(groupAddress,ChitGroupAbi,signer);const tx=await group.revealBid(amount,saltHex);return await tx.wait();}export async function contribute(groupAddress,amountWei){let isNative=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;const signer=await getSigner();const group=new ethers.Contract(groupAddress,ChitGroupAbi,signer);const overrides=isNative?{value:amountWei}:{};const tx=await group.makeContribution(amountWei,overrides);return await tx.wait();}","map":{"version":3,"names":["ethers","getProvider","getSigner","ADDRESSES","ChitFundFactoryAbi","ChitGroupAbi","getContract","address","abi","signerOrProvider","Contract","getFactory","readonly","arguments","length","undefined","p","ChitFundFactory","getGroup","provider","createGroup","cfg","signer","factory","tx","createChitGroup","receipt","wait","ev","logs","map","l","interface","parseLog","_unused","find","e","name","args","group","listGroups","getActiveGroups","joinGroup","groupAddress","valueWei","value","commitBid","amount","saltHex","hash","keccak256","AbiCoder","defaultAbiCoder","encode","revealBid","contribute","amountWei","isNative","overrides","makeContribution"],"sources":["C:/Users/kjalf/Downloads/ChitFund_SHM-main/ChitFund_SHM-main/src/web3/contracts.js"],"sourcesContent":["import { ethers } from 'ethers';\r\nimport { getProvider, getSigner } from './provider.js';\r\nimport { ADDRESSES } from './config.js';\r\nimport ChitFundFactoryAbi from '../abis/ChitFundFactory.json';\r\nimport ChitGroupAbi from '../abis/ChitGroup.json';\r\n\r\nfunction getContract(address, abi, signerOrProvider) {\r\n  return new ethers.Contract(address, abi, signerOrProvider);\r\n}\r\n\r\nexport function getFactory(readonly = true) {\r\n  const p = readonly ? getProvider() : undefined;\r\n  const signerOrProvider = readonly ? p : undefined;\r\n  return getContract(ADDRESSES.ChitFundFactory, ChitFundFactoryAbi, signerOrProvider ?? p);\r\n}\r\n\r\nexport function getGroup(address, readonly = true) {\r\n  const provider = getProvider();\r\n  return getContract(address, ChitGroupAbi, provider);\r\n}\r\n\r\nexport async function createGroup(cfg) {\r\n  const signer = await getSigner();\r\n  const factory = new ethers.Contract(ADDRESSES.ChitFundFactory, ChitFundFactoryAbi, signer);\r\n  const tx = await factory.createChitGroup(cfg);\r\n  const receipt = await tx.wait();\r\n  const ev = receipt.logs\r\n    .map(l => {\r\n      try { return factory.interface.parseLog(l); } catch { return null; }\r\n    })\r\n    .find(e => e && e.name === 'GroupCreated');\r\n  return ev ? ev.args.group : null;\r\n}\r\n\r\nexport async function listGroups() {\r\n  const factory = getFactory(true);\r\n  return await factory.getActiveGroups();\r\n}\r\n\r\nexport async function joinGroup(groupAddress, valueWei = '0') {\r\n  const signer = await getSigner();\r\n  const group = new ethers.Contract(groupAddress, ChitGroupAbi, signer);\r\n  const tx = await group.joinGroup({ value: valueWei });\r\n  return await tx.wait();\r\n}\r\n\r\nexport async function commitBid(groupAddress, amount, saltHex) {\r\n  const signer = await getSigner();\r\n  const group = new ethers.Contract(groupAddress, ChitGroupAbi, signer);\r\n  const hash = ethers.keccak256(ethers.AbiCoder.defaultAbiCoder().encode(['uint256','bytes32'], [amount, saltHex]));\r\n  const tx = await group.commitBid(hash);\r\n  return await tx.wait();\r\n}\r\n\r\nexport async function revealBid(groupAddress, amount, saltHex) {\r\n  const signer = await getSigner();\r\n  const group = new ethers.Contract(groupAddress, ChitGroupAbi, signer);\r\n  const tx = await group.revealBid(amount, saltHex);\r\n  return await tx.wait();\r\n}\r\n\r\nexport async function contribute(groupAddress, amountWei, isNative = true) {\r\n  const signer = await getSigner();\r\n  const group = new ethers.Contract(groupAddress, ChitGroupAbi, signer);\r\n  const overrides = isNative ? { value: amountWei } : {};\r\n  const tx = await group.makeContribution(amountWei, overrides);\r\n  return await tx.wait();\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}